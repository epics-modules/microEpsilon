#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/mms.dbd")
#! DBDEND


record(stringin, "$(dev):version1M") {
  field(DESC, "VersionString1")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto queryVer($(dev)) $(Link) 0")
}

record(stringin, "$(dev):version2M") {
  field(DESC, "VersionString1")
  field(DTYP, "Soft Channel")
}

record(waveform, "$(dev):welcome") {
  field(DESC, "Grab Welcome text")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto grabWelcomeText(100,$(dev)) $(Link) 0")
  field(FTVL, "CHAR")
  field(NELM, "100")
  field(PINI, "YES")
}

record(waveform, "$(dev):deviceID") {
  field(DESC, "grab Device ID")
  field(DTYP, "Soft Channel")
  field(FTVL, "CHAR")
  field(NELM, "100")
}

record(waveform, "$(dev):serialNum") {
  field(DESC, "grab serial number")
  field(DTYP, "Soft Channel")
  field(FTVL, "CHAR")
  field(NELM, "100")
}

record(mbbi, "$(dev):avgTypeModeM") {
  field(DESC, "Query Avg Type Mode")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto queryAvgTypeMode($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(ZRST, "No Averaging")
  field(ONST, "Moving Average")
  field(TWST, "Arithmetic Average")
  field(THST, "Median")
}

record(mbbo, "$(dev):avgTypeModeC") {
  field(DESC, "Set Avg Type Mode")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setAvgTypeMode($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(ZRST, "No Averaging")
  field(ONST, "Moving Average")
  field(TWST, "Arithmetic Average")
  field(THST, "Median")
}

record(mbbo, "$(dev):trigModeC") {
  field(DESC, "Set Trigger Mode")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setTrigMode($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(ZRST, "Continuous")
  field(ONST, "Rising Edge")
  field(TWST, "High Level")
  field(THST, "Gate Rising Edge")
}

record(mbbi, "$(dev):trigModeM") {
  field(DESC, "Set Trigger Mode")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto queryTrigMode($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(ZRST, "Continuous")
  field(ONST, "Rising Edge")
  field(TWST, "High Level")
  field(THST, "Gate Rising Edge")
}

record(longout, "$(dev):avgNumModeC") {
  field(DESC, "Set values to Avg")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setAvgNumMode($(dev)) $(Link) 0")
  field(DRVH, "8")
  field(DRVL, "2")
}

record(longin, "$(dev):avgNumModeM") {
  field(DESC, "Query values to Avg")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto queryAvgNumMode($(dev)) $(Link) 0")
}

record(mbbi, "$(dev):chan1StatM") {
  field(DESC, "Channel 1 Status")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "not available")
  field(ONST, "available")
  field(TWST, "math function")
}

record(stringout, "$(dev):chanStatusM") {
  field(DESC, "Channel Status Monitor")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto queryChanStatus($(dev)) $(Link) 0")
}

record(mbbi, "$(dev):chan2StatM") {
  field(DESC, "Channel 2 Status")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "not available")
  field(ONST, "available")
  field(TWST, "math function")
}

record(mbbi, "$(dev):chan3StatM") {
  field(DESC, "Channel 3 Status")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "not available")
  field(ONST, "available")
  field(TWST, "math function")
}

record(mbbi, "$(dev):chan4StatM") {
  field(DESC, "Channel 4 Status")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "not available")
  field(ONST, "available")
  field(TWST, "math function")
}

record(stringout, "$(dev):linModeM") {
  field(DESC, "Channel Linearization Mode")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto queryLinMode($(dev)) $(Link) 0")
}

record(mbbi, "$(dev):chan1LinModeM") {
  field(DESC, "Channel 1 Linearization Mode")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "no linearization")
  field(ONST, "Start of measuring range")
  field(TWST, "2-point-linearization")
  field(THST, "3-point-linearization")
  field(FRST, "5-point-linearization")
  field(FVST, "10-point-linearization")
}

record(mbbi, "$(dev):chan2LinModeM") {
  field(DESC, "Channel 2 Linearization Mode")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "no linearization")
  field(ONST, "Start of measuring range")
  field(TWST, "2-point-linearization")
  field(THST, "3-point-linearization")
  field(FRST, "5-point-linearization")
  field(FVST, "10-point-linearization")
}

record(mbbi, "$(dev):chan3LinModeM") {
  field(DESC, "Channel 3 Linearization Mode")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "no linearization")
  field(ONST, "Start of measuring range")
  field(TWST, "2-point-linearization")
  field(THST, "3-point-linearization")
  field(FRST, "5-point-linearization")
  field(FVST, "10-point-linearization")
}

record(mbbi, "$(dev):chan4LinModeM") {
  field(DESC, "Channel 4 Linearization Mode")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "no linearization")
  field(ONST, "Start of measuring range")
  field(TWST, "2-point-linearization")
  field(THST, "3-point-linearization")
  field(FRST, "5-point-linearization")
  field(FVST, "10-point-linearization")
}

record(stringout, "$(dev):statusM") {
  field(DESC, "Channel Linearization Mode")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto queryStatus($(dev)) $(Link) 0")
}

record(mbbo, "$(dev):sampleTimeC") {
  field(DESC, "Query sample time")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setSampleTime($(dev)) $(Link) 0")
  field(ZRVL, "384000")
  field(ONVL, "192000")
  field(TWVL, "96000")
  field(THVL, "64000")
  field(FRVL, "38400")
  field(FVVL, "32000")
  field(SXVL, "19200")
  field(SVVL, "16000")
  field(EIVL, "9600")
  field(NIVL, "1920")
  field(TEVL, "960")
  field(ELVL, "480")
  field(TVVL, "256")
  field(ZRST, "2.6 Sa/s")
  field(ONST, "5.2 Sa/s")
  field(TWST, "10.4 Sa/s")
  field(THST, "15.6 Sa/s")
  field(FRST, "26 Sa/s")
  field(FVST, "31.3 Sa/s")
  field(SXST, "52.1 Sa/s")
  field(SVST, "62.5 Sa/s")
  field(EIST, "104.2 Sa/s")
  field(NIST, "520.8 Sa/s")
  field(TEST, "1041.7 Sa/s")
  field(ELST, "2083.3 Sa/s")
  field(TVST, "3906.3 Sa/s")
}

record(longout, "$(dev):ch2ClearMathFuncC") {
  field(DESC, "Clear CH1 Math Function")
  field(DTYP, "stream")
  field(VAL, "2")
  field(OUT, "@capaNCDT6200.proto clearMathFunc($(dev)) $(Link) 0")
}

record(longout, "$(dev):ch3ClearMathFuncC") {
  field(DESC, "Clear CH1 Math Function")
  field(DTYP, "stream")
  field(VAL, "3")
  field(OUT, "@capaNCDT6200.proto clearMathFunc($(dev)) $(Link) 0")
}

record(longout, "$(dev):ch4ClearMathFuncC") {
  field(DESC, "Clear CH1 Math Function")
  field(DTYP, "stream")
  field(VAL, "4")
  field(OUT, "@capaNCDT6200.proto clearMathFunc($(dev)) $(Link) 0")
}

record(longout, "$(dev):ch1ClearMathFuncC") {
  field(DESC, "Clear CH1 Math Function")
  field(DTYP, "stream")
  field(VAL, "1")
  field(OUT, "@capaNCDT6200.proto clearMathFunc($(dev)) $(Link) 0")
}

record(longin, "$(dev):dataPortM") {
  field(DESC, "Port # of data port")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto queryDataPort($(dev)) $(Link) 0")
}

record(longout, "$(dev):dataPortC") {
  field(DESC, "Set port # of data port")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setDataPort($(dev)) $(Link) 0")
}

record(mbbi, "$(dev):sampleTimeM") {
  field(DESC, "Query sample time")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto querySampleTime($(dev)) $(Link) 0")
  field(ZRVL, "384000")
  field(ONVL, "192000")
  field(TWVL, "96000")
  field(THVL, "64000")
  field(FRVL, "38400")
  field(FVVL, "32000")
  field(SXVL, "19200")
  field(SVVL, "16000")
  field(EIVL, "9600")
  field(NIVL, "1920")
  field(TEVL, "960")
  field(ELVL, "480")
  field(TVVL, "256")
  field(ZRST, "2.6 Sa/s")
  field(ONST, "5.2 Sa/s")
  field(TWST, "10.4 Sa/s")
  field(THST, "15.6 Sa/s")
  field(FRST, "26 Sa/s")
  field(FVST, "31.3 Sa/s")
  field(SXST, "52.1 Sa/s")
  field(SVST, "62.5 Sa/s")
  field(EIST, "104.2 Sa/s")
  field(NIST, "520.8 Sa/s")
  field(TEST, "1041.7 Sa/s")
  field(ELST, "2083.3 Sa/s")
  field(TVST, "3906.3 Sa/s")
}

record(mbbo, "$(dev):chan1LinModeC") {
  field(DESC, "Set Ch1 Linearization Mode")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setCh1LinearMode($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "no linearization")
  field(ONST, "Start of measuring range")
  field(TWST, "2-point-linearization")
  field(THST, "3-point-linearization")
  field(FRST, "5-point-linearization")
  field(FVST, "10-point-linearization")
}

record(mbbo, "$(dev):chan2LinModeC") {
  field(DESC, "Set Ch2 Linearization Mode")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setCh2LinearMode($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "no linearization")
  field(ONST, "Start of measuring range")
  field(TWST, "2-point-linearization")
  field(THST, "3-point-linearization")
  field(FRST, "5-point-linearization")
  field(FVST, "10-point-linearization")
}

record(mbbo, "$(dev):chan3LinModeC") {
  field(DESC, "Set Ch3 Linearization Mode")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setCh3LinearMode($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "no linearization")
  field(ONST, "Start of measuring range")
  field(TWST, "2-point-linearization")
  field(THST, "3-point-linearization")
  field(FRST, "5-point-linearization")
  field(FVST, "10-point-linearization")
}

record(mbbo, "$(dev):chan4LinModeC") {
  field(DESC, "Set Ch4 Linearization Mode")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setCh4LinearMode($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(ZRST, "no linearization")
  field(ONST, "Start of measuring range")
  field(TWST, "2-point-linearization")
  field(THST, "3-point-linearization")
  field(FRST, "5-point-linearization")
  field(FVST, "10-point-linearization")
}

record(mbbo, "$(dev):CH1:setLinPointC") {
  field(DESC, "Query sample time")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setCh1LinearPoint($(dev)) $(Link) 0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(SVVL, "7")
  field(EIVL, "8")
  field(NIVL, "9")
  field(TEVL, "10")
  field(ONST, "linearization @10% range")
  field(TWST, "linearization @20% range")
  field(THST, "linearization @30% range")
  field(FRST, "linearization @40% range")
  field(FVST, "linearization @50% range")
  field(SXST, "linearization @60% range")
  field(SVST, "linearization @70% range")
  field(EIST, "linearization @80% range")
  field(NIST, "linearization @90% range")
  field(TEST, "linearization @100% range")
}

record(mbbo, "$(dev):CH2:setLinPointC") {
  field(DESC, "Query sample time")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setCh2LinearPoint($(dev)) $(Link) 0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(SVVL, "7")
  field(EIVL, "8")
  field(NIVL, "9")
  field(TEVL, "10")
  field(ONST, "linearization @10% range")
  field(TWST, "linearization @20% range")
  field(THST, "linearization @30% range")
  field(FRST, "linearization @40% range")
  field(FVST, "linearization @50% range")
  field(SXST, "linearization @60% range")
  field(SVST, "linearization @70% range")
  field(EIST, "linearization @80% range")
  field(NIST, "linearization @90% range")
  field(TEST, "linearization @100% range")
}

record(mbbo, "$(dev):CH3:setLinPointC") {
  field(DESC, "Query sample time")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setCh3LinearPoint($(dev)) $(Link) 0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(SVVL, "7")
  field(EIVL, "8")
  field(NIVL, "9")
  field(TEVL, "10")
  field(ONST, "linearization @10% range")
  field(TWST, "linearization @20% range")
  field(THST, "linearization @30% range")
  field(FRST, "linearization @40% range")
  field(FVST, "linearization @50% range")
  field(SXST, "linearization @60% range")
  field(SVST, "linearization @70% range")
  field(EIST, "linearization @80% range")
  field(NIST, "linearization @90% range")
  field(TEST, "linearization @100% range")
}

record(mbbo, "$(dev):CH4:setLinPointC") {
  field(DESC, "Query sample time")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setCh4LinearPoint($(dev)) $(Link) 0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(SVVL, "7")
  field(EIVL, "8")
  field(NIVL, "9")
  field(TEVL, "10")
  field(ONST, "linearization @10% range")
  field(TWST, "linearization @20% range")
  field(THST, "linearization @30% range")
  field(FRST, "linearization @40% range")
  field(FVST, "linearization @50% range")
  field(SXST, "linearization @60% range")
  field(SVST, "linearization @70% range")
  field(EIST, "linearization @80% range")
  field(NIST, "linearization @90% range")
  field(TEST, "linearization @100% range")
}

record(mbbo, "$(dev):analogFilterC") {
  field(DESC, "Set Analog Filter")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto setAnalogFilter($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(ZRST, "filter not active")
  field(ONST, "low pass filter active")
}

record(mbbi, "$(dev):analogFilterM") {
  field(DESC, "Query Analog Filter")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto queryAnalogFilter($(dev)) $(Link) 0")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(ZRST, "filter not active")
  field(ONST, "low pass filter active")
}

record(longin, "$(dev):measDataMonitor") {
  field(DESC, "Port # of data port")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto queryMeasData($(dev)) $(Link) 0")
}

record(waveform, "$(dev):measDataM") {
  field(DESC, "Grab Welcome text")
  field(DTYP, "stream")
  field(INP, "@capaNCDT6200.proto grabWelcomeText(100,$(dev)) $(Link) 0")
  field(FTVL, "CHAR")
  field(NELM, "250")
  field(PINI, "YES")
  field(FLNK, "$(dev):chan1InfoM")
}

record(stringout, "$(dev):chan1InfoM") {
  field(DESC, "Channel #1 Info")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto queryChan1Info($(dev)) $(Link) 0")
}

record(stringin, "$(dev):chan1NAM") {
  field(DESC, "Chan #1 Name")
  field(DTYP, "Soft Channel")
}

record(longin, "$(dev):chan1ANO") {
  field(DESC, "Chan #1 Article Number")
}

record(longin, "$(dev):chan1OFS") {
  field(DESC, "Chan #1 Meas Range Offset")
}

record(longin, "$(dev):chan1SNO") {
  field(DESC, "Chan #1 Serial Number")
}

record(longin, "$(dev):chan1RNG") {
  field(DESC, "Chan #1 Meas Range")
}

record(stringin, "$(dev):chan1UNT") {
  field(DESC, "Chan #1 Unit of Meas Range")
  field(DTYP, "Soft Channel")
}

record(stringout, "$(dev):chan2InfoM") {
  field(DESC, "Channel #2 Info")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto queryChan2Info($(dev)) $(Link) 0")
}

record(stringout, "$(dev):chan3InfoM") {
  field(DESC, "Channel #3 Info")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto queryChan3Info($(dev)) $(Link) 0")
}

record(stringout, "$(dev):chan4InfoM") {
  field(DESC, "Channel #4 Info")
  field(DTYP, "stream")
  field(OUT, "@capaNCDT6200.proto queryChan4Info($(dev)) $(Link) 0")
}

record(longin, "$(dev):chan2ANO") {
  field(DESC, "Chan #2 Article Number")
}

record(longin, "$(dev):chan3ANO") {
  field(DESC, "Chan #3 Article Number")
}

record(longin, "$(dev):chan4ANO") {
  field(DESC, "Chan #4 Article Number")
}

record(stringin, "$(dev):chan4NAM") {
  field(DESC, "Chan #4 Name")
  field(DTYP, "Soft Channel")
}

record(stringin, "$(dev):chan3NAM") {
  field(DESC, "Chan #3 Name")
  field(DTYP, "Soft Channel")
}

record(stringin, "$(dev):chan2NAM") {
  field(DESC, "Chan #2 Name")
  field(DTYP, "Soft Channel")
}

record(longin, "$(dev):chan4SNO") {
  field(DESC, "Chan #4 Serial Number")
}

record(longin, "$(dev):chan3SNO") {
  field(DESC, "Chan #3 Serial Number")
}

record(longin, "$(dev):chan2SNO") {
  field(DESC, "Chan #2 Serial Number")
}

record(longin, "$(dev):chan4OFS") {
  field(DESC, "Chan #4 Meas Range Offset")
}

record(longin, "$(dev):chan3OFS") {
  field(DESC, "Chan #3 Meas Range Offset")
}

record(longin, "$(dev):chan2OFS") {
  field(DESC, "Chan #2 Meas Range Offset")
}

record(longin, "$(dev):chan4RNG") {
  field(DESC, "Chan #4 Meas Range")
}

record(longin, "$(dev):chan3RNG") {
  field(DESC, "Chan #3 Meas Range")
}

record(longin, "$(dev):chan2RNG") {
  field(DESC, "Chan #2 Meas Range")
}

record(stringin, "$(dev):chan4UNT") {
  field(DESC, "Chan #4 Unit of Meas Range")
  field(DTYP, "Soft Channel")
}

record(stringin, "$(dev):chan3UNT") {
  field(DESC, "Chan #3 Unit of Meas Range")
  field(DTYP, "Soft Channel")
}

record(stringin, "$(dev):chan2UNT") {
  field(DESC, "Chan #2 Unit of Meas Range")
  field(DTYP, "Soft Channel")
}

#! Further lines contain data used by VisualDCT
#! View(0,4868,1.1)
#! Record("$(dev):version1M",120,221,0,1,"$(dev):version1M")
#! Record("$(dev):version2M",380,236,0,1,"$(dev):version2M")
#! Record("$(dev):welcome",20,20,0,0,"$(dev):welcome")
#! Record("$(dev):deviceID",260,8,0,1,"$(dev):deviceID")
#! Record("$(dev):serialNum",500,28,0,1,"$(dev):serialNum")
#! Record("$(dev):avgTypeModeM",380,670,0,1,"$(dev):avgTypeModeM")
#! Record("$(dev):avgTypeModeC",120,670,0,1,"$(dev):avgTypeModeC")
#! Record("$(dev):trigModeC",120,390,0,1,"$(dev):trigModeC")
#! Record("$(dev):trigModeM",380,390,0,1,"$(dev):trigModeM")
#! Record("$(dev):avgNumModeC",120,914,0,1,"$(dev):avgNumModeC")
#! Record("$(dev):avgNumModeM",380,961,0,1,"$(dev):avgNumModeM")
#! Record("$(dev):chan1StatM",380,1146,0,1,"$(dev):chan1StatM")
#! Record("$(dev):chanStatusM",120,1201,0,1,"$(dev):chanStatusM")
#! Record("$(dev):chan2StatM",640,1146,0,1,"$(dev):chan2StatM")
#! Record("$(dev):chan3StatM",900,1146,0,1,"$(dev):chan3StatM")
#! Record("$(dev):chan4StatM",1160,1146,0,1,"$(dev):chan4StatM")
#! Record("$(dev):linModeM",120,1521,0,1,"$(dev):linModeM")
#! Record("$(dev):chan1LinModeM",380,1382,0,1,"$(dev):chan1LinModeM")
#! Record("$(dev):chan2LinModeM",640,1382,0,1,"$(dev):chan2LinModeM")
#! Record("$(dev):chan3LinModeM",900,1382,0,1,"$(dev):chan3LinModeM")
#! Record("$(dev):chan4LinModeM",1160,1382,0,1,"$(dev):chan4LinModeM")
#! Record("$(dev):statusM",120,2161,0,1,"$(dev):statusM")
#! Record("$(dev):sampleTimeC",380,2079,0,1,"$(dev):sampleTimeC")
#! Record("$(dev):ch2ClearMathFuncC",380,2648,0,1,"$(dev):ch2ClearMathFuncC")
#! Record("$(dev):ch3ClearMathFuncC",640,2648,0,1,"$(dev):ch3ClearMathFuncC")
#! Record("$(dev):ch4ClearMathFuncC",900,2648,0,1,"$(dev):ch4ClearMathFuncC")
#! Record("$(dev):ch1ClearMathFuncC",120,2648,0,1,"$(dev):ch1ClearMathFuncC")
#! Record("$(dev):dataPortM",380,2861,0,1,"$(dev):dataPortM")
#! Record("$(dev):dataPortC",120,2861,0,1,"$(dev):dataPortC")
#! Record("$(dev):sampleTimeM",640,2079,0,1,"$(dev):sampleTimeM")
#! Record("$(dev):chan1LinModeC",380,1714,0,1,"$(dev):chan1LinModeC")
#! Record("$(dev):chan2LinModeC",640,1714,0,1,"$(dev):chan2LinModeC")
#! Record("$(dev):chan3LinModeC",900,1714,0,1,"$(dev):chan3LinModeC")
#! Record("$(dev):chan4LinModeC",1160,1714,0,1,"$(dev):chan4LinModeC")
#! Record("$(dev):CH1:setLinPointC",120,3262,0,1,"$(dev):CH1:setLinPointC")
#! Record("$(dev):CH2:setLinPointC",380,3262,0,1,"$(dev):CH2:setLinPointC")
#! Record("$(dev):CH3:setLinPointC",640,3262,0,1,"$(dev):CH3:setLinPointC")
#! Record("$(dev):CH4:setLinPointC",900,3262,0,1,"$(dev):CH4:setLinPointC")
#! Record("$(dev):analogFilterC",120,3806,0,1,"$(dev):analogFilterC")
#! Record("$(dev):analogFilterM",380,3806,0,1,"$(dev):analogFilterM")
#! Record("$(dev):measDataMonitor",120,3061,0,1,"$(dev):measDataMonitor")
#! Record("$(dev):measDataM",120,4066,0,1,"$(dev):measDataM")
#! Field("$(dev):measDataM.FLNK",16777215,1,"$(dev):measDataM.FLNK")
#! Link("$(dev):measDataM.FLNK","$(dev):chan1InfoM")
#! Record("$(dev):chan1InfoM",160,4341,0,1,"$(dev):chan1InfoM")
#! Record("$(dev):chan1NAM",720,4356,0,1,"$(dev):chan1NAM")
#! Record("$(dev):chan1ANO",460,4370,0,1,"$(dev):chan1ANO")
#! Record("$(dev):chan1OFS",1240,4370,0,1,"$(dev):chan1OFS")
#! Record("$(dev):chan1SNO",980,4370,0,1,"$(dev):chan1SNO")
#! Record("$(dev):chan1RNG",1500,4370,0,1,"$(dev):chan1RNG")
#! Record("$(dev):chan1UNT",1760,4356,0,1,"$(dev):chan1UNT")
#! Record("$(dev):chan2InfoM",140,4541,0,0,"$(dev):chan2InfoM")
#! Record("$(dev):chan3InfoM",180,4741,0,1,"$(dev):chan3InfoM")
#! Record("$(dev):chan4InfoM",160,4921,0,0,"$(dev):chan4InfoM")
#! Record("$(dev):chan2ANO",460,4570,0,1,"$(dev):chan2ANO")
#! Record("$(dev):chan3ANO",460,4770,0,1,"$(dev):chan3ANO")
#! Record("$(dev):chan4ANO",460,4950,0,1,"$(dev):chan4ANO")
#! Record("$(dev):chan4NAM",720,4936,0,1,"$(dev):chan4NAM")
#! Record("$(dev):chan3NAM",720,4756,0,1,"$(dev):chan3NAM")
#! Record("$(dev):chan2NAM",720,4556,0,1,"$(dev):chan2NAM")
#! Record("$(dev):chan4SNO",980,4950,0,1,"$(dev):chan4SNO")
#! Record("$(dev):chan3SNO",980,4770,0,1,"$(dev):chan3SNO")
#! Record("$(dev):chan2SNO",980,4570,0,1,"$(dev):chan2SNO")
#! Record("$(dev):chan4OFS",1240,4950,0,1,"$(dev):chan4OFS")
#! Record("$(dev):chan3OFS",1240,4770,0,1,"$(dev):chan3OFS")
#! Record("$(dev):chan2OFS",1240,4570,0,1,"$(dev):chan2OFS")
#! Record("$(dev):chan4RNG",1500,4950,0,1,"$(dev):chan4RNG")
#! Record("$(dev):chan3RNG",1500,4770,0,1,"$(dev):chan3RNG")
#! Record("$(dev):chan2RNG",1500,4570,0,1,"$(dev):chan2RNG")
#! Record("$(dev):chan4UNT",1760,4936,0,1,"$(dev):chan4UNT")
#! Record("$(dev):chan3UNT",1760,4756,0,1,"$(dev):chan3UNT")
#! Record("$(dev):chan2UNT",1760,4556,0,1,"$(dev):chan2UNT")
